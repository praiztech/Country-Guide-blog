/* FONT */
@font-face {
  font-family: 'poppins';
  src: url('/fonts/Poppins-Regular.woff2') format('woff2');
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}

/* RESET */
*, *::before, *::after {
  box-sizing: border-box;
  background: transparent;
  margin: 0;
  padding: 0;
  border: 0;
  font-family: inherit;
  font-size: 100%;
}

ul, ol {
  list-style-type: none;
}

button, a {
  color: inherit;
}

/* ensures that page is only visible after content loading if css is disabled */
[hidden] {
  display: none !important;
}

[data-visually-hidden] {
  position: absolute;
  width: 1px;
  height: auto;
  margin: 0;
  border: 0;
  padding: 0;
  clip-path: inset(50%);
  overflow: hidden;
  white-space: nowrap;
}

/* GENERAL */
:root {
  font-size: 62.5%; /* reset 4 easier sizing w/out impacting text resize */
  --base-font: 'poppins';
  --base-font-size: 1.6rem;
  --base-spacing: 1.25rem;
  --white: hsl(0 0% 99%);
  --very-light-gray: hsl(0 0% 100% / 75%);
  --light-gray: hsl(0 0% 95%);
  --gray: hsl(0 0% 58%);
  --dark-gray: hsl(0 0% 40%);
  --very-light-blue: hsl(240 100% 97%);
  --light-blue: hsl(205 50% 25%);
  --blue: hsl(209 23% 22%);
  --dark-blue: hsl(207 26% 17%);
  --very-dark-blue: hsl(200 15% 8%);
  --bright-red: hsl(0 77% 47%);
  --dusted-red: hsl(0 76% 69%);
}

:root[data-theme="light"] {
  --pg-bg: var(--light-gray);
  --pg-txt: var(--dark-blue);
  --elem-bg: var(--very-light-gray);
  --elem-border: var(--gray);
  --skip-bg: var(--very-light-blue);
  --search-focus: var(--light-blue);
  --search-bg: var(--white);
  --error-txt: var(--bright-red);
}

:root[data-theme="dark"] {
  --pg-bg: var(--very-dark-blue);
  --pg-txt: var(--very-light-gray);
  --elem-bg: var(--dark-blue);
  --elem-border: var(--gray);
  --skip-bg: var(--blue);
  --search-focus: var(--very-light-gray);
  --search-bg: var(--dark-blue);
  --error-txt: var(--dusted-red);
}

html, body {
  height: 100%; /* ensures page takes up full browser viewport but still works with zoom */
}

/* sets noscript text properties for when JavaScript is turned off */
body {
  font: var(--base-font-size)/1.5 var(--base-font, sans-serif);
}

.content {
  min-height: 100%;
  display: block;
  color: var(--pg-txt);
  background-color: var(--pg-bg);
  padding: 0 var(--base-spacing);
}

/* HEADER */
/* Skip Link */
.skip-link {
  position: absolute;
  left: 0;
  border: 0.3rem solid var(--elem-border);
  border-radius: 0.3rem;
  padding: calc(var(--base-spacing) * 0.45);
  background-color: var(--skip-bg);
  font-weight: bold;
  line-height: 1;
  cursor: pointer;
  z-index: 3;
  transform: translateY(-100%);
  transition: transform 0.3s ease-in-out;
}

.skip-link:focus {
  transform: translateY(1rem);
}

header {
  padding: calc(var(--base-spacing) * 0.8) 0;
}

.small-banner {
  display: grid;
  grid-template-columns: auto 1fr;
  row-gap: calc(var(--base-spacing) * 1.5);
}

.large-banner {
  display: none;
}

/* Logo */
.logo {
  --logo-size: 2.7rem;
  grid-column: 1 / 2;
  align-self: center;
  width: var(--logo-size);
  height: var(--logo-size);
  border-radius: 50%;
  cursor: pointer;
}

.logo a, .logo img {
  display: inline-block;
  width: 100%;
  height: 100%;
  border-radius: 50%;
}

.logo:hover, .logo a:focus {
  outline: 0.1rem solid var(--elem-border);
  outline-offset: 0.2rem;
}

/* removes focus styling for mouse users on browsers that support :focus-visible */
.logo a:focus:not(:focus-visible) {
  outline: none;
  outline-offset: 0;
}

/* Theme Switch */
button.theme-toggle {
  grid-column: 2 / -1;
  justify-self: end;
  position: relative; /* for positioning pseudo-elements for styling */
  display: flex;
  align-items: center;
  gap: 0.2rem;
  cursor: pointer;
}

/* custom properties aren't inherited by pseudo-elements */
button.theme-toggle::before, button.theme-toggle::after, .toggle-ctrl::before, .toggle-ctrl {
  --theme-toggle-size: 2.4rem;
}

/* button.theme-toggle::before for hover styling, button.theme-toggle::after for focus styling */
[data-theme="light"] button.theme-toggle::before, [data-theme="light"] button.theme-toggle::after, [data-theme="light"] .toggle-ctrl::before, [data-theme="light"] .toggle-ctrl {
  --dark-blue: hsl(207 26% 17%);
  --very-light-gray: hsl(0 0% 100% / 75%);
  --switch-bg: var(--dark-blue);
  --switch-border: var(--very-light-gray);
  --switch-knob-bg: var(--very-light-gray);
  --switch-knob-border: var(--dark-blue);
}

[data-theme="dark"] button.theme-toggle::before, [data-theme="dark"] button.theme-toggle::after, [data-theme="dark"] .toggle-ctrl::before, [data-theme="dark"] .toggle-ctrl {
  --very-light-gray: hsl(0 0% 100% / 75%);
  --dark-gray: hsl(0 0% 40%);
  --switch-bg: var(--very-light-gray);
  --switch-border: var(--dark-gray);
  --switch-knob-bg: var(--dark-gray);
  --switch-knob-border: var(--very-light-gray);
}

/* allows for hover styling distinct from focus styling so focus-visible can be utilized in supporting browsers */
button.theme-toggle::before, button.theme-toggle::after {
  content: "";
  position: absolute;
  /* top and left of auto ensures button pseudo-elements fit over toggle control */
  width: calc(var(--theme-toggle-size) * 2);
  height: var(--theme-toggle-size);
  border-radius: 10000000000000000px; /* hack to produce a perfect pill on rectangular elements */
  border: 0.2rem solid transparent; /* for contrast themes */
  z-index: 2;
}

button.theme-toggle:hover::before, button.theme-toggle:focus::after {
  border: 0.5rem double var(--switch-border); 
}

/* ensures no focus styling from mouse click in browsers that support focus-visible, as hover styling is visible */
button.theme-toggle:focus:not(:focus-visible)::after {
  border: none;
}

.toggle-ctrl {
  width: calc(var(--theme-toggle-size) * 2);
  height: var(--theme-toggle-size);
  flex: 1 0 auto; /* ensures toggle control never shrinks below its base width */
  border-radius: 10000000000000000px;
  background-color: var(--switch-bg);
  transition: background-color 0.4s ease-in-out;
  position: relative; /* for positioning toggle control knob */
}

/* toggle control knob */
.toggle-ctrl::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: var(--theme-toggle-size);
  height: var(--theme-toggle-size);
  background-color: var(--switch-knob-bg);
  border: 0.5rem double var(--switch-knob-border);
  border-radius: 50%;
  z-index: 3;
}

button.theme-toggle[aria-pressed="true"] .toggle-ctrl::before {
  transform: translateX(var(--theme-toggle-size));
  transition: transform 0.4s ease-in-out;
}

button.theme-toggle[aria-pressed="false"] .toggle-ctrl::before {
  transform: translateX(0);
  transition: transform 0.4s ease-in-out;
}

/* Search Widget */
.search-widget {
  --search-btn-size: 3rem;
  --search-widget-vertical-spacing: calc(var(--base-spacing) * 0.4);
  --search-widget-horizontal-spacing: var(--base-spacing);
  grid-column: 1 / -1;
  background-color: var(--elem-bg);
  border: 0.1rem solid var(--elem-border);
  border-radius: 10000000000000000px;
  padding: var(--search-widget-vertical-spacing) var(--search-widget-horizontal-spacing);
  display: flex;
  align-items: center; /* to support WCAG 1.4.4 on a 320px viewport */
}

.search-widget search-combobox {
  flex: 1 1 0px;
}

.search-widget button[type="submit"] {
  width: var(--search-btn-size);
  height: var(--search-btn-size);
  cursor: pointer;
  position: relative; /* allows for positioning of ::after for hover styling */
}

/* allows for button hover styling distinct from focus styling so focus-visible can be utilized in supporting browsers */
.search-widget button[type="submit"]::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.search-widget button[type="submit"]:hover::after, .search-widget button[type="submit"]:focus {
  outline: 0.2rem solid var(--search-focus);
}

.search-widget button[type="submit"]:focus:not(:focus-visible) {
  outline: none;
}

.search-widget button[type="submit"] svg {
  display: block;
  width: 100%;
  height: 100%;
}

/* ensures custom properties cascade into svg from <use> */
[data-theme="light"] use.search-icon {
  --icon-bg-color: var(--white);
  --icon-color: var(--dark-blue);
}

[data-theme="dark"] use.search-icon {
  --icon-bg-color: var(--blue);
  --icon-color: var(--very-light-gray);
}

/* MAIN */
h1 {
  padding: var(--base-spacing) 0;
  font-size: calc(var(--base-font-size) * 1.5);
  text-align: center;
}

/* FOOTER */
footer {
  margin-top: calc(var(--base-spacing) * 1.25);
  text-align: center;
}

small {
  font-size: calc(var(--base-font-size) * 0.75);
}

@media screen and (min-width: 48em) {
  .small-banner {
    display: none;
  }

  .large-banner {
    display: flex;
    gap: 5%;
  }

  .search-widget {
    flex: 1;
  }
}

/* ACCESSIBILITY QUERIES */
@media screen and (forced-colors: active) {
  use.search-icon, [data-theme="light"] use.search-icon, [data-theme="dark"] use.search-icon {
    --icon-bg-color: Canvas;
    --icon-color: CanvasText;
  }
}
