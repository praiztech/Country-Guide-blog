/* FONT */
@font-face {
  font-family: 'source_serif_proitalic';
  src: url('/fonts/sourceserifpro-italic-webfont.woff2') format('woff2');
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}

/* RESET */
*, *::before, *::after {
  box-sizing: border-box;
  background: transparent;
  outline: none;
  margin: 0;
  padding: 0;
  border: 0;
  font-family: inherit;
  font-size: 100%;
}

h1 {
  text-align: center;
}

ul, ol {
  list-style-type: none;
}

button, a, input {
  color: inherit;
}

a {
  text-decoration: none;
}

input[type="radio"], input[type="search"] {
  appearance: none;
}

input[type="search"]::-webkit-search-cancel-button, input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
  appearance: none;
}

label {
  cursor: pointer;
}

/* ensures that page is only visible after content loading, when css is disabled */
[hidden] {
  display: none !important;
}

[data-visually-hidden] {
  position: absolute;
  width: 1px;
  height: auto;
  margin: 0;
  border: 0;
  padding: 0;
  clip-path: inset(50%);
  overflow: hidden;
  white-space: nowrap;
}

/* GENERAL */
:root {
  font-size: 62.5%; /* reset 4 easier sizing w/out impacting text resize */
  --italic-font: 'source_serif_proitalic';
  --base-font-size: 1.6rem;
  --base-spacing: 1.25rem;
  --white: hsl(0 0% 99%);
  --very-light-gray: hsl(0 0% 100% / 75%);
  --light-gray: hsl(0 0% 95%);
  --gray: hsl(0 0% 58%);
  --dark-gray: hsl(0 0% 40%);
  --very-light-blue: hsl(240 100% 97%);
  --light-blue: hsl(205 50% 25%);
  --blue: hsl(209 23% 22%);
  --dark-blue: hsl(207 26% 17%);
  --very-dark-blue: hsl(200 15% 8%);
}

:root[data-theme="light"] {
  --pg-bg: var(--light-gray);
  --pg-txt: var(--dark-blue);
  --elem-bg: var(--very-light-gray);
  --elem-border: var(--gray);
  --skip-bg: var(--very-light-blue);
  --search-focus: var(--light-blue);
  --search-focus-txt: var(--very-light-blue);
  --search-listbox-bg: var(--white);
}

:root[data-theme="dark"] {
  --pg-bg: var(--very-dark-blue);
  --pg-txt: var(--very-light-gray);
  --elem-bg: var(--dark-blue);
  --elem-border: var(--gray);
  --skip-bg: var(--blue);
  --search-focus: var(--very-light-gray);
  --search-focus-txt: var(--very-dark-blue);
  --search-listbox-bg: var(--dark-blue);
}

/* sets noscript text properties for when JavaScript is turned off */
body {
  font: var(--base-font-size)/1.5 var(--italic-font, serif);
}

.content {
  display: block;
  color: var(--pg-txt);
  background-color: var(--pg-bg);
  padding: 0 var(--base-spacing);
}

[data-skip] {
  position: absolute;
  left: 0;
  border: 0.3rem solid var(--elem-border);
  border-radius: 0.3rem;
  padding: calc(var(--base-spacing) * 0.45);
  background-color: var(--skip-bg);
  font-weight: bold;
  line-height: 1;
  cursor: pointer;
  z-index: 3;
  transform: translateY(-50rem);
  transition: transform 0.55s ease-in-out;
}

[data-skip]:focus {
  transform: translateY(1rem);
}

header {
  padding: calc(var(--base-spacing) * 0.8) 0;
  display: grid;
  grid-template-columns: auto 1fr;
  row-gap: var(--base-spacing);
}

/* Logo */
.logo {
  --logo-size: 2.75rem;
  grid-column: 1 / 2;
  align-self: center;
  width: var(--logo-size);
  height: var(--logo-size);
  border-radius: 50%;
  cursor: pointer;
}

.logo a, .logo img {
  display: inline-block;
  width: 100%;
  height: 100%;
  border-radius: 50%;
}

.logo:hover, .logo a:focus {
  outline: 0.1rem solid var(--elem-border);
  outline-offset: 0.2rem;
}

/* removes focus styling for mouse users on browsers that support :focus-visible */
.logo a:focus:not(:focus-visible) {
  outline: none;
  outline-offset: 0;
}

/* Theme Switch */
.theme-widget {
  grid-column: 2 / -1;
  justify-self: end;
  display: flex;
  align-items: center;
}

/* custom properties aren't inherited by pseudo-elements */
.controls, .switch::before, .switch::after {
  --theme-ctrl-size: 2.4rem;
}

/* display of inline-block unnecessary coz flex children act like block-level elements */
.controls {
  width: calc(var(--theme-ctrl-size) * 2);
  height: var(--theme-ctrl-size);
  margin: 0 calc(var(--base-spacing) * 0.5);
  position: relative;
}

input[type="radio"] {
  opacity: 0.00001;
  position: absolute;
  width: 50%;
  height: 100%;
  top: 0;
  z-index: 3;
  cursor: pointer;
}

input[type="radio"]:first-of-type {
  left: 0;
}

input[type="radio"]:last-of-type {
  left: 50%;
}

/* .switch::before for border on hover, .switch for border on focus, .switch::after for theme knob */
[data-theme="light"] .switch::before, [data-theme="light"] .switch, [data-theme="light"] .switch::after {
  --dark-blue: hsl(207 26% 17%);
  --very-light-gray: hsl(0 0% 100% / 75%);
  --switch-bg: var(--dark-blue);
  --switch-border: var(--very-light-gray);
  --switch-knob-bg: var(--very-light-gray);
  --switch-knob-border: var(--dark-blue);
  --align-2-input: 0;
}

[data-theme="dark"] .switch::before, [data-theme="dark"] .switch, [data-theme="dark"] .switch::after {
  --very-light-gray: hsl(0 0% 100% / 75%);
  --dark-gray: hsl(0 0% 40%);
  --switch-bg: var(--very-light-gray);
  --switch-border: var(--dark-gray);
  --switch-knob-bg: var(--dark-gray);
  --switch-knob-border: var(--very-light-gray);
  --align-2-input: 100%;
}

.switch {
  display: inline-block;
  width: 100%;
  height: 100%;
  border-radius: calc(var(--theme-ctrl-size) * 0.5);
  background-color: var(--switch-bg);
  transition: background-color 0.4s ease-in-out;
}

.switch::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border-radius: calc(var(--theme-ctrl-size) * 0.5);
  z-index: 1;
}

.theme-widget:hover .switch::before, input[type="radio"]:focus ~ .switch {
  border: 0.5rem double var(--switch-border);
}

input[type="radio"]:focus:not(:focus-visible) ~ .switch {
  border: none;
}

.switch::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: var(--theme-ctrl-size);
  height: var(--theme-ctrl-size);
  background-color: var(--switch-knob-bg);
  border: 0.5rem double var(--switch-knob-border);
  border-radius: 50%;
  z-index: 2;
  transform: translateX(var(--align-2-input));
  transition: transform 0.4s ease-in-out;
}

/* Search Widget */
.search-widget {
  --search-widget-vertical-spacing: calc(var(--base-spacing) * 0.4);
  --search-widget-horizontal-spacing: var(--base-spacing);
  grid-column: 1 / -1;
  background-color: var(--elem-bg);
  border: 0.1rem solid var(--elem-border);
  border-radius: 2.4rem;
  padding: var(--search-widget-vertical-spacing) var(--search-widget-horizontal-spacing);
  display: flex;
}

.search-box {
  flex: 1 1 0px;
  padding: calc(var(--search-widget-vertical-spacing) * 0.25) 0;
  position: relative;
}

.input-controls:hover {
  outline: 0.1rem solid var(--search-focus);
}

.input-controls:focus-within {
  outline: 0.1rem solid var(--search-focus);
  background-color: var(--search-focus);
  color: var(--search-focus-txt);
}

.search-box label {
  padding-left: calc(var(--search-widget-vertical-spacing) * 0.5);
  letter-spacing: 0.12rem;
  word-spacing: 0.16rem;
  opacity: 1;
}

.search-box label:not([data-visible]) {
  opacity: 0.0001;
}

.search-box input {
  position: absolute;
  top: 0;
  left: calc(var(--search-widget-vertical-spacing) * 0.5);
  width: 100%;
  height: 100%;
  cursor: pointer;
  z-index: 3;
  /* â†‘ced font-size makes the caret and input more visible, line-height of 1 ensures it still fits over its label */
  font-size: calc(var(--base-font-size) * 1.5);
  line-height: 1;
}

.search-box .suggestions {
  position: absolute;
  top: calc(100% + var(--search-widget-vertical-spacing));
  left: 0;
  max-height: 67.5vh;
  background-color: var(--search-listbox-bg);
  border: 0.1rem solid var(--elem-border);
  border-radius: 0.25rem;
  white-space: nowrap;
  z-index: 5;
  display: flex;
  flex-direction: column;
}

/* to allow suggestions list scroll */
.suggestions [role="listbox"] {
  flex: 1 1 auto;
  overflow: auto;
}

.suggestions h2, .suggestions [role="option"] {
  padding: calc(var(--search-widget-vertical-spacing) * 0.5) calc(var(--search-widget-horizontal-spacing) * 0.5);
  border-bottom: 0.1rem solid var(--elem-border);
}

.suggestions [role="option"]:last-child {
  border-bottom: none;
}

.suggestions [aria-selected] {
  cursor: pointer;
}

.suggestions [aria-selected="true"] {
  background-color: var(--search-focus);
  color: var(--search-focus-txt);
}

.suggestions [aria-selected="false"] {
  background-color: transparent;
  color: inherit;
}

.search-widget button {
  --search-btn-size: 2.4rem;
  --search-btn-horizontal-spacing: calc(var(--search-widget-vertical-spacing) * 2);
  --search-btn-vertical-spacing: calc(var(--search-widget-vertical-spacing) * 0.5);
  width: calc(var(--search-btn-size) + var(--search-btn-horizontal-spacing));
  height: calc(var(--search-btn-size) + var(--search-btn-vertical-spacing));
  padding: var(--search-btn-vertical-spacing) calc(var(--search-btn-horizontal-spacing) * 0.35) 0 calc(var(--search-btn-horizontal-spacing) * 0.65);
  cursor: pointer;
  position: relative;
}

/* allows for button hover styling distinct from focus styling so focus-visible can be utilized in supporting browsers */
.search-widget button::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.search-widget button:hover::after, .search-widget button:focus {
  outline: 0.2rem solid var(--search-focus);
}

.search-widget button:focus:not(:focus-visible) {
  outline: none;
}

.search-widget svg {
  width: 100%;
  height: 100%;
}

/* ensures custom properties cascade into svg from <use> */
[data-theme="light"] .search-icon {
  --icon-bg-color: var(--white);
  --icon-color: var(--dark-blue);
}

[data-theme="dark"] .search-icon {
  --icon-bg-color: var(--blue);
  --icon-color: var(--very-light-gray);
}

/* Footer Copyright */
small {
  font-size: calc(var(--base-font-size) * 0.75);
}
